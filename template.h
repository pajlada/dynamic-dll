#pragma once

// Sample template file

#include <types.h>

#ifdef __cplusplus
#include <cinttypes>
#else
#include <inttypes.h>
#endif

#include <Windows.h>
#include <strsafe.h>

#define PAJLADA_DLL_NAME "pajlada.dll"

extern "C" {

// clang-format off
// >> Function pointer definitions -- AUTOGENERATED
// << Function pointer definitions -- AUTOGENERATED
// clang-format on

typedef void (*PajladaProc)(void);

struct PajladaProcsTypes {
    // clang-format off
    // >> Function pointer in struct -- AUTOGENERATED
    // << Function pointer in struct -- AUTOGENERATED
    // clang-format on
};

extern struct PajladaProcsTypes pajladaProcs;

static HMODULE libPajlada = nullptr;

static PajladaResult PajladaLoadDLL() {
    if (libPajlada == nullptr) {
        // #ifdef UNICODE
        libPajlada = LoadLibraryW(L"pajlada.dll");
        // #else
        // libPajlada = LoadLibrary("pajlada.dll");
        // #endif
        if (!libPajlada) {
            return PajladaResult_DLLNotFound;
        }
    }

    // clang-format off
    // >> Function pointer loading -- AUTOGENERATED
    // << Function pointer loading -- AUTOGENERATED
    // clang-format on

    return PajladaResult_OK;
}

// clang-format off
// >> Function pointer defines -- AUTOGENERATED
// << Function pointer defines -- AUTOGENERATED
// clang-format on

}  // extern "C"
